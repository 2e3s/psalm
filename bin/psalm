#!/usr/bin/env php
<?php

foreach ([__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;
        break;
    }
}

use Psalm\Checker\FileChecker;
use Psalm\Checker\ProjectChecker;

// show all errors
error_reporting(-1);
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
ini_set('memory_limit', '2048M');
ini_set('xdebug.max_nesting_level', 512);

// get options from command line
$options = getopt('f:m:hc:', ['help', 'debug', 'config:', 'monochrome', 'show-info:', 'diff', 'file:']);

if (isset($options['file'])) {
    $options['f'] = $options['file'];
}

if (array_key_exists('help', $options)) {
    $options['h'] = null;
}

if (array_key_exists('monochrome', $options)) {
    $options['m'] = null;
}

if (isset($options['config'])) {
    $options['c'] = $options['help'];
}

if (array_key_exists('h', $options)) {
    echo <<< HELP
Usage:
    psalm [options]

Options:
    -h, --help                  Display this help message
    --debug                     Debug information
    -c, --config                Path to a psalm.xml configuration file
    -f, --file [FILE_PATH]      Path to run checks against
    -m, --monochrome            Enable monochrome output
    --show-info[=BOOLEAN]       Show non-exception parser findings.
    --diff                      File to check is a diff


HELP;

    exit;
}

// get vars from options
$debug = array_key_exists('debug', $options);
$paths_to_check = null;

if (isset($options['f'])) {
    $paths_to_check = is_array($options['f']) ? $options['f'] : [$options['f']];
    foreach ($paths_to_check as $i => $path_to_check) {
        if (!file_exists($path_to_check)) {
            die('Cannot locate ' . $path_to_check . PHP_EOL);
        }

        $paths_to_check[$i] = realpath($path_to_check);
    }
}

$path_to_config = isset($options['config']) ? realpath($options['config']) : null;
$use_color = !array_key_exists('m', $options);
$show_info = isset($options['show-info'])
            ? $options['show-info'] !== 'false' && $options['show-info'] !== '0'
            : true;
$is_diff = isset($options['diff']);

// initialise custom config, if passed
if ($path_to_config) {
    ProjectChecker::setConfigXML($path_to_config);
}

ProjectChecker::$use_color = $use_color;
ProjectChecker::$show_info = $show_info;

$time = microtime(true);

if ($paths_to_check === null) {
    ProjectChecker::check($debug, $is_diff);
} elseif ($paths_to_check) {
    foreach ($paths_to_check as $path_to_check) {
        if (is_dir($path_to_check)) {
            ProjectChecker::checkDir($path_to_check, $debug);
        } else {
            if ($path_to_check === __FILE__) {
                exit(0);
            }

            ProjectChecker::checkFile($path_to_check, $debug);
        }
    }
}

if ($debug) {
    echo('Checks took ' . (microtime(true) - $time));
    echo(' and used ' . memory_get_peak_usage() . PHP_EOL);
}
